{"mappings":"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","sources":["src/index.js","src/js/search.js","src/js/filter.js"],"sourcesContent":["// import './js/fetchUrl';\nimport {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './js/fetchUrl';\nimport './js/firebase';\nimport './js/search';\nimport './js/select';\nimport './js/filter';\nimport './js/restore';\nimport { fillGenresFiltr } from './js/filter';\nimport './js/gallery-card-modal';\nimport { save, load } from './js/localstorage';\nimport './js/localstorage';\nimport './js/spinner';\nimport './js/modal-teem';\nimport './js/switcherTheme';\nimport './js/button-up';\nimport { Pagination } from './js/pagination';\nimport { saveConfig } from './js/restore';\nimport './js/errorMessage';\nimport { setErrorMessage } from './js/errorMessage';\n\nconst PaginationInstnce = new Pagination(\n  document.getElementById('pagination'),\n  {\n    countPoint: 5,\n    totalPages: 10,\n    onShow: paginationOnClick,\n  }\n);\n\nfunction paginationOnClick(pageNumber) {\n  requestData.page = pageNumber;\n  getNextServerData().then(movies => {\n    renderMoviesMarkup(movies);\n  });\n}\n\ngetServerData(requestTypes.GENRE)\n  .then(data => {\n    requestData.genres = data.genres;\n    fillGenresFiltr('filter-genres');\n  })\n  .then(() => {\n    let config = load('config');\n    if (config) {\n      requestData.page = config.requestData.page;\n      requestData.request = config.requestData.request;\n      requestData.discover = config.requestData.discover;\n      requestData.id = config.requestData.id;\n      requestData.search = config.requestData.search;\n      requestData.movies = config.requestData.movies;\n      requestData.genres = config.requestData.genres;\n      requestData.movie = config.requestData.movie;\n      requestData.videos = config.requestData.videos;\n\n      PaginationInstnce.currentPage = requestData.page;\n      getNextServerData()\n        .then(movies => {\n          PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n          renderMoviesMarkup(movies);\n        })\n        .catch(error => setErrorMessage(error.message));\n    } else {\n      requestData.page = 1;\n      getServerData(requestTypes.TRENDING)\n        .then(movies => {\n          requestData.movies = movies;\n          PaginationInstnce.currentPage = 1;\n          PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n          saveConfig();\n          renderMoviesMarkup(movies);\n        })\n        .catch(error => setErrorMessage(error.message));\n    }\n  })\n  .catch(error => setErrorMessage(error.message));\n\nexport { PaginationInstnce };\n","import {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './fetchUrl';\n\nimport { spinnerOn, spinnerOff } from './spinner';\nimport { fillGenresFiltr } from './filter';\nimport { PaginationInstnce } from '../index';\nimport { setErrorMessage } from './errorMessage';\n\nconst searchBtn = document.querySelector('.header__form-button');\nconst searchInput = document.querySelector('.header__form-input');\nconst headerSearchError = document.querySelector('.header__text-warning');\n\nsearchBtn.addEventListener('click', onBtnSearcClick);\n\nfunction onBtnSearcClick(e) {\n  e.preventDefault();\n  if (searchInput.value !== '' && searchInput.value !== ' ') {\n    requestData.search = `${searchInput.value}`;\n    requestData.page = 1;\n    getServerData(requestTypes.SEARCH)\n      .then(movies => {\n        spinnerOn();\n        PaginationInstnce.currentPage = 1;\n        PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n\n        renderMoviesMarkup(movies);\n        searchInput.value = '';\n      })\n      .catch(error => setErrorMessage(error.message));\n  }\n}\n","import {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './fetchUrl';\n\nimport {\n  createCustomOneSelect,\n  setOption,\n  getOption,\n  getOptionNum,\n  createCustomMultiSelect,\n  getMultiOption,\n  setMultiOption,\n} from './select.js';\n\nimport { classGenres, classYears } from './restore';\n\nimport { PaginationInstnce } from '../index';\nimport { setErrorMessage } from './errorMessage';\n\nexport function fillGenresFiltr(classSelect) {\n  const markup = markupFilterGenres();\n  const select = document.querySelector(`.custom-multi-select.${classSelect}`);\n  select.innerHTML = markup;\n  createCustomMultiSelect();\n  createCustomOneSelect();\n}\n\nfunction markupFilterGenres() {\n  let markup =\n    '<select><option value=\"Genres\">Genres</option><option value=\"None\">None</option>';\n  markup += requestData.genres\n    .map(({ id, name }) => `<option value=\"${id}\">${name}</option>`)\n    .join('');\n  markup += '</select>';\n  return markup;\n}\n\nconst filterBtnUse = document.querySelector('.filter-btn-use');\nfilterBtnUse.addEventListener('click', function (e) {\n  requestData.idxYears = getOptionNum('filter-years');\n  const filterYears = getOption('filter-years');\n  requestData.valuesGenres = getMultiOption('filter-genres');\n  requestData.page = 1;\n  requestData.discover = '';\n  if (requestData.valuesGenres.length) {\n    requestData.discover = `&with_genres=${requestData.valuesGenres}`;\n  }\n  requestData.discover += filterYears;\n  if (requestData.discover) {\n    getServerData(requestTypes.DISCOVER)\n      .then(movies => {\n        PaginationInstnce.currentPage = 1;\n        PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n        renderMoviesMarkup(movies);\n      })\n      .catch(error => setErrorMessage(error.message));\n  } else {\n    getServerData(requestTypes.TRENDING)\n      .then(movies => {\n        PaginationInstnce.currentPage = 1;\n        PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n        renderMoviesMarkup(movies);\n      })\n      .catch(error => setErrorMessage(error.message));\n  }\n});\n\nconst filterBtnReset = document.querySelector('.filter-btn-reset');\nfilterBtnReset.addEventListener('click', function (e) {\n  setOption(classYears, 0);\n  setMultiOption(classGenres, '');\n  requestTypes.page = 1;\n  getServerData(requestTypes.TRENDING)\n    .then(movies => {\n      PaginationInstnce.currentPage = 1;\n      PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n      renderMoviesMarkup(movies);\n    })\n    .catch(error => setErrorMessage(error.message));\n});\n\nconst filterNavBtn = document.querySelector(\n  '.header__navigation-button-filter'\n);\nfilterNavBtn.addEventListener('click', function (e) {\n  const filterContainer = document.querySelector('.filter__container');\n  filterContainer.classList.toggle('visually-hidden');\n});\n"],"names":["$cWifi","parcelRequire","$6142fea1849c7fbd$export$c2088fd8b3d8e2d2","classSelect","markup","requestData","genres","map","param","id","name","concat","join","$6142fea1849c7fbd$var$markupFilterGenres","document","querySelector","innerHTML","$l3CR8","createCustomMultiSelect","createCustomOneSelect","addEventListener","e","idxYears","getOptionNum","filterYears","getOption","valuesGenres","getMultiOption","page","discover","length","getServerData","requestTypes","DISCOVER","then","movies","$b8f9b7833fa37166$export$3987d669b8c45b1f","currentPage","setTotalPages","Math","min","total_pages","renderMoviesMarkup","catch","error","$5zZao","setErrorMessage","message","TRENDING","setOption","$gsnYQ","classYears","setMultiOption","classGenres","classList","toggle","$d35904b1c7f1c41e$var$searchBtn","$d35904b1c7f1c41e$var$searchInput","preventDefault","value","search","SEARCH","$j1lrD","spinnerOn","$jcFG7","Pagination","getElementById","countPoint","totalPages","onShow","pageNumber","getNextServerData","GENRE","data","config","$6Sco9","load","request","movie","videos","saveConfig"],"version":3,"file":"index.2a6ca51f.js.map"}