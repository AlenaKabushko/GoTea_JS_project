{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,WCAA,IAAAE,EAAAF,EAAA,S,aAiBO,SAASG,EAAgBC,GAC9B,MAAMC,EAMR,WACE,IAAIA,EACF,mFAKF,OAJAA,GAAUJ,EAAAK,YAAYC,OACnBC,KAAI,EAACC,GAAEA,EAAEC,KAAEA,KAAW,kBAAkBD,MAAOC,eAC/CC,KAAK,IACRN,GAAU,YACHA,C,CAbQO,GACAC,SAASC,cAAc,wBAAwBV,KACvDW,UAAYV,GACnB,EAAAH,EAAAc,0B,EANF,EAAAd,EAAAe,yBAmBkBJ,SAASC,cAAc,eAC/BI,iBAAiB,SAAS,SAAUC,GAC5C,MAAMC,GAAc,EAAAlB,EAAAmB,WAAU,gBACxBC,GAAe,EAAApB,EAAAqB,gBAAe,iBACpCtB,EAAAK,YAAYkB,KAAO,EACnBvB,EAAAK,YAAYmB,SAAW,GACnBH,EAAaI,SACfzB,EAAAK,YAAYmB,SAAW,gBAAgBH,KAEzCrB,EAAAK,YAAYmB,UAAYL,EACpBnB,EAAAK,YAAYmB,UACd,EAAAxB,EAAA0B,eAAc1B,EAAA2B,aAAaC,UAAUC,MAAKC,KACxC,EAAA9B,EAAA+B,oBAAmBD,EAAO,KAG5B,EAAA9B,EAAA0B,eAAc1B,EAAA2B,aAAaK,UAAUH,MAAKC,KACxC,EAAA9B,EAAA+B,oBAAmBD,EAAO,G,IAKXlB,SAASC,cAC5B,qCAEWI,iBAAiB,SAAS,SAAUC,GACvBN,SAASC,cAAc,sBAC/BoB,UAAUC,OAAO,kB,sBDjDU,EAA7ClC,EAAA0B,eAAc1B,EAAA2B,aAAaQ,OACxBN,MAAKO,IAEJpC,EAAAK,YAAYC,OAAS8B,EAAK9B,OAC1BJ,EAAgB,kBACT,KAER2B,MAAK,KAAM,EAAAQ,EAAAC,mBElBdtC,EAAAD,EAAA,S,sBAYA,MAAMwC,EAAY3B,SAASC,cAAc,wBACnC2B,EAAc5B,SAASC,cAAc,uBACjBD,SAASC,cAAc,yBAEjD0B,EAAUtB,iBAAiB,SAASC,IAClCA,EAAEuB,iBACwB,KAAtBD,EAAYE,OAAsC,MAAtBF,EAAYE,QAC1C1C,EAAAK,YAAYsC,OAAS,GAAGH,EAAYE,QACpC1C,EAAAK,YAAYkB,KAAO,GACnB,EAAAvB,EAAA0B,eAAc1B,EAAA2B,aAAaiB,QAAQf,MAAKC,KACtC,EAAA9B,EAAA+B,oBAAmBD,GACnBU,EAAYE,MAAQ,EAAE,IAMxB,I","sources":["src/index.js","src/js/start.js","src/js/filter.js","src/js/search.js"],"sourcesContent":["import './js/fetchUrl';\nimport './js/firebase';\nimport './js/start';\nimport './js/search';\nimport './js/select';\nimport './js/filter';\nimport './js/gallery-card-modal';\nimport './js/localstorage';\nimport './js/spinner';\nimport './js/modal-teem';\nimport './js/pagination';\nimport './js/switcherTheme';\nimport './js/button-up';\n","import { requestData, requestTypes, getServerData } from './fetchUrl.js';\n\nimport { spinnerOn, spinnerOff } from './spinner';\nimport { fillGenresFiltr } from './filter';\n// import { makePagination, makePaginationBtn } from './pagination';\nimport { restoreConfig } from './restore';\n\n//-----------------------------------------------------------------------\n//на старте:\n\n//запрос массива соответствия номера жанра и названия\ngetServerData(requestTypes.GENRE)\n  .then(data => {\n    //сохраним его в глобальной переменной\n    requestData.genres = data.genres;\n    fillGenresFiltr('filter-genres');\n    return true;\n  })\n  .then(() => restoreConfig());\n// .then(() => {\n//   console.log('total pages', requestData.movies.total_pages);\n//   makePaginationBtn(requestData.movies.total_pages);\n//   makePagination(requestData.movies.total_pages, 20);\n// });\n","import {\n  createCustomOneSelect,\n  setOption,\n  getOption,\n  createCustomMultiSelect,\n  getMultiOption,\n} from './select.js';\n\nimport {\n  requestData,\n  requestTypes,\n  getServerData,\n  renderMoviesMarkup,\n} from './fetchUrl.js';\n\ncreateCustomOneSelect();\n\nexport function fillGenresFiltr(classSelect) {\n  const markup = markupFilterGenres();\n  const select = document.querySelector(`.custom-multi-select.${classSelect}`);\n  select.innerHTML = markup;\n  createCustomMultiSelect();\n}\n\nfunction markupFilterGenres() {\n  let markup =\n    '<select><option value=\"Genres\">Genres</option><option value=\"None\">None</option>';\n  markup += requestData.genres\n    .map(({ id, name }) => `<option value=\"${id}\">${name}</option>`)\n    .join('');\n  markup += '</select>';\n  return markup;\n}\n\nconst filterBtn = document.querySelector('.filter-btn');\nfilterBtn.addEventListener('click', function (e) {\n  const filterYears = getOption('filter-years');\n  const filterGendes = getMultiOption('filter-genres');\n  requestData.page = 1;\n  requestData.discover = '';\n  if (filterGendes.length) {\n    requestData.discover = `&with_genres=${filterGendes}`;\n  }\n  requestData.discover += filterYears;\n  if (requestData.discover) {\n    getServerData(requestTypes.DISCOVER).then(movies => {\n      renderMoviesMarkup(movies);\n    });\n  } else {\n    getServerData(requestTypes.TRENDING).then(movies => {\n      renderMoviesMarkup(movies);\n    });\n  }\n});\n\nconst filterNavBtn = document.querySelector(\n  '.header__navigation-button-filter'\n);\nfilterNavBtn.addEventListener('click', function (e) {\n  const filterContainer = document.querySelector('.filter__container');\n  filterContainer.classList.toggle('visually-hidden');\n});\n","import {\n  requestData,\n  requestTypes,\n  getServerData,\n  renderMoviesMarkup,\n  markupList,\n} from './fetchUrl.js';\n\nimport { spinnerOn, spinnerOff } from './spinner';\nimport { fillGenresFiltr } from './filter';\nimport { makePagination, makePaginationBtn } from './pagination';\n// --------------------------\nconst searchBtn = document.querySelector('.header__form-button');\nconst searchInput = document.querySelector('.header__form-input');\nconst headerSearchError = document.querySelector('.header__text-warning');\n\nsearchBtn.addEventListener('click', e => {\n  e.preventDefault();\n  if (searchInput.value !== '' && searchInput.value !== ' ') {\n    requestData.search = `${searchInput.value}`;\n    requestData.page = 1;\n    getServerData(requestTypes.SEARCH).then(movies => {\n      renderMoviesMarkup(movies);\n      searchInput.value = '';\n      /* if (( )) {\n        console.log('FUCK');\n      } */\n    });\n  } else {\n    return;\n  }\n});\n/* console.log(markupList); */\n"],"names":["parcelRequire","$lkfBv","$7iYtU","$cc8167df025acb14$export$c2088fd8b3d8e2d2","classSelect","markup","requestData","genres","map","id","name","join","$cc8167df025acb14$var$markupFilterGenres","document","querySelector","innerHTML","createCustomMultiSelect","createCustomOneSelect","addEventListener","e","filterYears","getOption","filterGendes","getMultiOption","page","discover","length","getServerData","requestTypes","DISCOVER","then","movies","renderMoviesMarkup","TRENDING","classList","toggle","GENRE","data","$5A2tN","restoreConfig","$b18fd23e9761f35d$var$searchBtn","$b18fd23e9761f35d$var$searchInput","preventDefault","value","search","SEARCH"],"version":3,"file":"index.ef20412c.js.map"}