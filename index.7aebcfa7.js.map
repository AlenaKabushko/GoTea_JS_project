{"mappings":"oeACA,IAAAA,EAAAC,EAAA,S,WCDAA,EAAA,a,gBCAAD,EAAAC,EAAA,S,yBAsBO,SAASC,EAAgBC,GAC9B,MAAMC,EAOR,WACE,IAAIA,EACF,mFAKF,OAJAA,GAAUJ,EAAAK,YAAYC,OACnBC,KAAI,EAACC,GAAEA,EAAEC,KAAEA,KAAW,kBAAkBD,MAAOC,eAC/CC,KAAK,IACRN,GAAU,YACHA,C,CAdQO,GACAC,SAASC,cAAc,wBAAwBV,KACvDW,UAAYV,GACnB,EAAAW,EAAAC,4BACA,EAAAD,EAAAE,wB,CAamBL,SAASC,cAAc,mBAC/BK,iBAAiB,SAAS,SAAUC,GAC/CnB,EAAAK,YAAYe,UAAW,EAAAL,EAAAM,cAAa,gBACpC,MAAMC,GAAc,EAAAP,EAAAQ,WAAU,gBAC9BvB,EAAAK,YAAYmB,cAAe,EAAAT,EAAAU,gBAAe,iBAC1CzB,EAAAK,YAAYqB,KAAO,EACnB1B,EAAAK,YAAYsB,SAAW,GACnB3B,EAAAK,YAAYmB,aAAaI,SAC3B5B,EAAAK,YAAYsB,SAAW,gBAAgB3B,EAAAK,YAAYmB,gBAErDxB,EAAAK,YAAYsB,UAAYL,EACpBtB,EAAAK,YAAYsB,UACd,EAAA3B,EAAA6B,eAAc7B,EAAA8B,aAAaC,UAAUC,MAAKC,IACxCC,EAAkBC,YAAc,EAChCD,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eACrD,EAAAvC,EAAAwC,oBAAmBP,EAAO,KAG5B,EAAAjC,EAAA6B,eAAc7B,EAAA8B,aAAaW,UAAUT,MAAKC,IACxCC,EAAkBC,YAAc,EAChCD,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eACrD,EAAAvC,EAAAwC,oBAAmBP,EAAO,G,IAKTrB,SAASC,cAAc,qBAC/BK,iBAAiB,SAAS,SAAUC,IACjD,EAAAJ,EAAA2B,WAAUC,EAAAC,WAAY,IACtB,EAAA7B,EAAA8B,gBAAeF,EAAAG,YAAa,IAC5B9C,EAAA8B,aAAaJ,KAAO,GACpB,EAAA1B,EAAA6B,eAAc7B,EAAA8B,aAAaW,UAAUT,MAAKC,IACxCC,EAAkBC,YAAc,EAChCD,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eACrD,EAAAvC,EAAAwC,oBAAmBP,EAAO,G,IAITrB,SAASC,cAC5B,qCAEWK,iBAAiB,SAAS,SAAUC,GACvBP,SAASC,cAAc,sBAC/BkC,UAAUC,OAAO,kB,IDvEnC,MAAMC,EAAYrC,SAASC,cAAc,wBACnCqC,EAActC,SAASC,cAAc,uBACjBD,SAASC,cAAc,yBAEjDoC,EAAU/B,iBAAiB,SAE3B,SAAyBC,GAEvBA,EAAEgC,iBACwB,KAAtBD,EAAYE,OAAsC,MAAtBF,EAAYE,QAE1CpD,EAAAK,YAAYgD,OAAS,GAAGH,EAAYE,QACpCpD,EAAAK,YAAYqB,KAAO,GACnB,EAAA1B,EAAA6B,eAAc7B,EAAA8B,aAAawB,QAAQtB,MAAKC,KACtC,EAAAsB,EAAAC,aACAtB,EAAkBC,YAAc,EAChCD,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eAErD,EAAAvC,EAAAwC,oBAAmBP,GACnBiB,EAAYE,MAAQ,EAAE,I,+IDP5B,MAAMlB,EAAoB,IAAI,EAAAuB,EAAAC,YAC5B9C,SAAS+C,eAAe,cACxB,CACEC,WAAY,EACZC,WAAY,GACZC,OAIJ,SAA2BC,GACzB/D,EAAAK,YAAYqB,KAAOqC,GACnB,EAAA/D,EAAAgE,qBAAoBhC,MAAKC,KACvB,EAAAjC,EAAAwC,oBAAmBP,EAAO,G,KAI9B,EAAAjC,EAAA6B,eAAc7B,EAAA8B,aAAamC,OACxBjC,MAAKkC,IACJlE,EAAAK,YAAYC,OAAS4D,EAAK5D,OAC1BJ,EAAgB,gBAAgB,IAEjC8B,MAAK,KACJ,IAAImC,GAAS,EAAAC,EAAAC,MAAK,UACdF,GACFnE,EAAAK,YAAYqB,KAAOyC,EAAO9D,YAAYqB,KACtC1B,EAAAK,YAAYiE,QAAUH,EAAO9D,YAAYiE,QACzCtE,EAAAK,YAAYsB,SAAWwC,EAAO9D,YAAYsB,SAC1C3B,EAAAK,YAAYG,GAAK2D,EAAO9D,YAAYG,GACpCR,EAAAK,YAAYgD,OAASc,EAAO9D,YAAYgD,OACxCrD,EAAAK,YAAY4B,OAASkC,EAAO9D,YAAY4B,OACxCjC,EAAAK,YAAYC,OAAS6D,EAAO9D,YAAYC,OACxCN,EAAAK,YAAYkE,MAAQJ,EAAO9D,YAAYkE,MACvCvE,EAAAK,YAAYmE,OAASL,EAAO9D,YAAYmE,OAExCtC,EAAkBC,YAAcnC,EAAAK,YAAYqB,MAC5C,EAAA1B,EAAAgE,qBAAoBhC,MAAKC,IACvBC,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eACrD,EAAAvC,EAAAwC,oBAAmBP,EAAO,MAG5BjC,EAAAK,YAAYqB,KAAO,GACnB,EAAA1B,EAAA6B,eAAc7B,EAAA8B,aAAaW,UAAUT,MAAKC,IACxCjC,EAAAK,YAAY4B,OAASA,EACrBC,EAAkBC,YAAc,EAChCD,EAAkBE,cAAcC,KAAKC,IAAI,IAAKL,EAAOM,eACrD,EAAAI,EAAA8B,eACA,EAAAzE,EAAAwC,oBAAmBP,EAAO,I","sources":["src/index.js","src/js/search.js","src/js/filter.js"],"sourcesContent":["// import './js/fetchUrl';\nimport {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './js/fetchUrl';\nimport './js/firebase';\nimport './js/search';\nimport './js/select';\nimport './js/filter';\nimport './js/restore';\nimport { fillGenresFiltr } from './js/filter';\nimport './js/gallery-card-modal';\nimport { save, load } from './js/localstorage';\nimport './js/localstorage';\nimport './js/spinner';\nimport './js/modal-teem';\nimport './js/switcherTheme';\nimport './js/button-up';\nimport { Pagination } from './js/pagination';\nimport { saveConfig } from './js/restore';\n\nconst PaginationInstnce = new Pagination(\n  document.getElementById('pagination'),\n  {\n    countPoint: 5,\n    totalPages: 10,\n    onShow: paginationOnClick,\n  }\n);\n\nfunction paginationOnClick(pageNumber) {\n  requestData.page = pageNumber;\n  getNextServerData().then(movies => {\n    renderMoviesMarkup(movies);\n  });\n}\n\ngetServerData(requestTypes.GENRE)\n  .then(data => {\n    requestData.genres = data.genres;\n    fillGenresFiltr('filter-genres');\n  })\n  .then(() => {\n    let config = load('config');\n    if (config) {\n      requestData.page = config.requestData.page;\n      requestData.request = config.requestData.request;\n      requestData.discover = config.requestData.discover;\n      requestData.id = config.requestData.id;\n      requestData.search = config.requestData.search;\n      requestData.movies = config.requestData.movies;\n      requestData.genres = config.requestData.genres;\n      requestData.movie = config.requestData.movie;\n      requestData.videos = config.requestData.videos;\n\n      PaginationInstnce.currentPage = requestData.page;\n      getNextServerData().then(movies => {\n        PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n        renderMoviesMarkup(movies);\n      });\n    } else {\n      requestData.page = 1;\n      getServerData(requestTypes.TRENDING).then(movies => {\n        requestData.movies = movies;\n        PaginationInstnce.currentPage = 1;\n        PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n        saveConfig();\n        renderMoviesMarkup(movies);\n      });\n    }\n  });\n\nexport { PaginationInstnce };\n","import {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './fetchUrl';\n\nimport { spinnerOn, spinnerOff } from './spinner';\nimport { fillGenresFiltr } from './filter';\nimport { PaginationInstnce } from '../index';\n\nconst searchBtn = document.querySelector('.header__form-button');\nconst searchInput = document.querySelector('.header__form-input');\nconst headerSearchError = document.querySelector('.header__text-warning');\n\nsearchBtn.addEventListener('click', onBtnSearcClick);\n\nfunction onBtnSearcClick(e) {  \n  \n  e.preventDefault();\n  if (searchInput.value !== '' && searchInput.value !== ' ') {\n    \n    requestData.search = `${searchInput.value}`;\n    requestData.page = 1;\n    getServerData(requestTypes.SEARCH).then(movies => {\n      spinnerOn();\n      PaginationInstnce.currentPage = 1;\n      PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n\n      renderMoviesMarkup(movies);\n      searchInput.value = '';\n    });\n  }\n}\n","import {\n  requestData,\n  requestTypes,\n  getServerData,\n  getNextServerData,\n  renderMoviesMarkup,\n} from './fetchUrl';\n\nimport {\n  createCustomOneSelect,\n  setOption,\n  getOption,\n  getOptionNum,\n  createCustomMultiSelect,\n  getMultiOption,\n  setMultiOption,\n} from './select.js';\n\nimport { classGenres, classYears } from './restore';\n\nimport { PaginationInstnce } from '../index';\n\nexport function fillGenresFiltr(classSelect) {\n  const markup = markupFilterGenres();\n  const select = document.querySelector(`.custom-multi-select.${classSelect}`);\n  select.innerHTML = markup;\n  createCustomMultiSelect();\n  createCustomOneSelect();\n}\n\nfunction markupFilterGenres() {\n  let markup =\n    '<select><option value=\"Genres\">Genres</option><option value=\"None\">None</option>';\n  markup += requestData.genres\n    .map(({ id, name }) => `<option value=\"${id}\">${name}</option>`)\n    .join('');\n  markup += '</select>';\n  return markup;\n}\n\nconst filterBtnUse = document.querySelector('.filter-btn-use');\nfilterBtnUse.addEventListener('click', function (e) {\n  requestData.idxYears = getOptionNum('filter-years');\n  const filterYears = getOption('filter-years');\n  requestData.valuesGenres = getMultiOption('filter-genres');\n  requestData.page = 1;\n  requestData.discover = '';\n  if (requestData.valuesGenres.length) {\n    requestData.discover = `&with_genres=${requestData.valuesGenres}`;\n  }\n  requestData.discover += filterYears;\n  if (requestData.discover) {\n    getServerData(requestTypes.DISCOVER).then(movies => {\n      PaginationInstnce.currentPage = 1;\n      PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n      renderMoviesMarkup(movies);\n    });\n  } else {\n    getServerData(requestTypes.TRENDING).then(movies => {\n      PaginationInstnce.currentPage = 1;\n      PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n      renderMoviesMarkup(movies);\n    });\n  }\n});\n\nconst filterBtnReset = document.querySelector('.filter-btn-reset');\nfilterBtnReset.addEventListener('click', function (e) {\n  setOption(classYears, 0);\n  setMultiOption(classGenres, '');\n  requestTypes.page = 1;\n  getServerData(requestTypes.TRENDING).then(movies => {\n    PaginationInstnce.currentPage = 1;\n    PaginationInstnce.setTotalPages(Math.min(500, movies.total_pages));\n    renderMoviesMarkup(movies);\n  });\n});\n\nconst filterNavBtn = document.querySelector(\n  '.header__navigation-button-filter'\n);\nfilterNavBtn.addEventListener('click', function (e) {\n  const filterContainer = document.querySelector('.filter__container');\n  filterContainer.classList.toggle('visually-hidden');\n});\n"],"names":["$lkfBv","parcelRequire","$cc8167df025acb14$export$c2088fd8b3d8e2d2","classSelect","markup","requestData","genres","map","id","name","join","$cc8167df025acb14$var$markupFilterGenres","document","querySelector","innerHTML","$7iYtU","createCustomMultiSelect","createCustomOneSelect","addEventListener","e","idxYears","getOptionNum","filterYears","getOption","valuesGenres","getMultiOption","page","discover","length","getServerData","requestTypes","DISCOVER","then","movies","$1f0dc3b9307be026$export$3987d669b8c45b1f","currentPage","setTotalPages","Math","min","total_pages","renderMoviesMarkup","TRENDING","setOption","$5A2tN","classYears","setMultiOption","classGenres","classList","toggle","$b18fd23e9761f35d$var$searchBtn","$b18fd23e9761f35d$var$searchInput","preventDefault","value","search","SEARCH","$04jNI","spinnerOn","$2nhTy","Pagination","getElementById","countPoint","totalPages","onShow","pageNumber","getNextServerData","GENRE","data","config","$bOFJ0","load","request","movie","videos","saveConfig"],"version":3,"file":"index.7aebcfa7.js.map"}